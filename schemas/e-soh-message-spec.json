{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "E-SOH broker message schema",
  "description": "E-SOH broker message schema",
  "type": "object",
  "properties": {
    "id": {
      "type": "string",
      "format": "uuid",
      "description": "UUID (RFC4122) - Guarantee uniqueness of the message over (at least) a 24h period."
    },
    "version": {
      "type": "string",
      "description": "Version of message specification.",
      "const": "v4.0"
    },
    "type": {
      "type": "string",
      "enum": [
        "Feature"
      ]
    },
    "geometry": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "type",
            "coordinates"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Point"
              ]
            },
            "coordinates": {
              "type": "array",
              "minItems": 2,
              "items": {
                "type": "number"
              }
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type",
            "coordinates"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Polygon"
              ]
            },
            "coordinates": {
              "type": "array",
              "items": {
                "type": "array",
                "minItems": 4,
                "items": {
                  "type": "array",
                  "minItems": 2,
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        }
      ]
    },
    "properties": {
      "type": "object",
      "properties": {
        "pubtime": {
          "type": "string",
          "format": "date-time",
          "description": "Identifies the date/time of when the file was posted/published, in RFC3339 format.\nThe publication date/time is critical for subscribers to prevent message loss by knowing\ntheir lag (how far behind the publisher they are).\n"
        },
        "data_id": {
          "type": "string",
          "description": "Unique identifier of the data as defined by the data producer.\nData producers SHOULD NOT use an opaque id, but something meaningful to support client side filtering.\n"
        },
        "title": {
          "type": "string",
          "description": "short phrase or sentence describing the dataset. In many discovery systems, the title will be displayed in the results list from a search, and therefore should be human readable and reasonable to display in a list of such names. This attribute is also recommended by the NetCDF Users Guide and the CF conventions."
        },
        "summary": {
          "type": "string",
          "description": "A paragraph describing the dataset, analogous to an abstract for a paper."
        },
        "keywords": {
          "type": "string",
          "description": "A comma-separated list of key words and/or phrases. Keywords may be common words or phrases, terms from a controlled vocabulary (GCMD is often used), or URIs for terms from a controlled vocabulary (see also 'keywords_vocabulary' attribute)."
        },
        "license": {
          "type": "string",
          "description": "Provide the URL to a standard or specific license, enter 'Freely Distributed' or 'None', or describe any restrictions to data access and distribution in free text."
        },
        "Conventions": {
          "type": "string",
          "description": "A comma-separated list of the conventions that are followed by the dataset. For files that follow this version of ACDD, include the string 'ACDD-1.3'. (This attribute is described in the NetCDF Users Guide.)"
        },
        "naming_authority": {
          "type": "string",
          "description": "The organization that provides the initial id (see above) for the dataset. The naming authority should be uniquely specified by this attribute. We recommend using reverse-DNS naming for the naming authority; URIs are also acceptable. Example: 'edu.ucar.unidata'."
        },
        "history": {
          "type": "string",
          "description": "Provides an audit trail for modifications to the original data. This attribute is also in the NetCDF Users Guide: 'This is a character array with a line for each invocation of a program that has modified the dataset. Well-behaved generic netCDF applications should append a line containing: date, time of day, user name, program name and command arguments.' To include a more complete description you can append a reference to an ISO Lineage entity; see NOAA EDM ISO Lineage guidance."
        },
        "metadata_id": {
          "type": "string",
          "description": "Identifier for associated discovery metadata record to which the notification applies to. This id should make it possible to discover the data in the datastore."
        },
        "datetime": {
          "type": "string",
          "format": "date-time",
          "description": "Identifies the date/time of the data being published, in RFC3339 format."
        },
        "start_datetime": {
          "type": "string",
          "format": "date-time",
          "description": "Identifies the start date/time date of the data being published, in RFC3339 format."
        },
        "end_datetime": {
          "type": "string",
          "format": "date-time",
          "description": "Identifies the end date/time date of the data being published, in RFC3339 format."
        },
        "coverage_duration_datetime": {
          "type": "string",
          "format": "date-time",
          "description": "Describes the duration of the data set. Use RFC3339 duration format."
        },
        "resolution_datetime": {
          "type": "string",
          "format": "date-time",
          "description": "Describes the targeted time period between each value in the data set. Use RFC3339 format."
        },
        "cache": {
          "type": "boolean",
          "description": "Whether the data in the notification should be cached (if not specified, the default value is `true`).\nWhen set to `false`, WIS2 Global Cache services do not cache the canonical link, and publish the\nnotification with an unmodified canonical link (which points back to the endpoint as specified by the data producer).\nThe notification is always published by the Global Cache regardless to the `cache` topic.\n",
          "default": true
        },
        "integrity": {
          "type": "object",
          "description": "Specifies a checksum to be applied to the data to ensure that the download is accurate.",
          "properties": {
            "method": {
              "type": "string",
              "description": "A specific set of methods for calculating the checksum algorithms:\n* ``sha256``: the Secure Hash Algorithm 2, 256 bits, value is base64 encoded.\n* ``sha384``: the Secure Hash Algorithm 2, 384 bits, value is base64 encoded.\n* ``sha512``: the Secure Hash Algorithm 2, 512 bits, value is base64 encoded.\n* ``sha3-256``: the Secure Hash Algorithm 3, 256 bits, value is base64 encoded.\n* ``sha3-384``: the Secure Hash Algorithm 3, 384 bits, value is base64 encoded.\n* ``sha3-512``: the Secure Hash Algorithm 3, 512 bits, value is base64 encoded.\n",
              "enum": [
                "sha256",
                "sha384",
                "sha512",
                "sha3-256",
                "sha3-384",
                "sha3-512"
              ]
            },
            "value": {
              "type": "string",
              "description": "Checksum value."
            }
          },
          "required": [
            "method",
            "value"
          ]
        },
        "source": {
          "type": "string",
          "description": "The method of production of the original data. If it was model-generated, source should name the model and its version. If it is observational, source should characterize it. This attribute is defined in the CF Conventions."
        },
        "platform": {
          "type": "string",
          "description": "Name of the platform(s) that supported the sensor data used to create this data set or product. Platforms can be of any type, including satellite, ship, station, aircraft or other. Indicate controlled vocabulary used in platform_vocabulary."
        },
        "platform_vocabulary": {
          "type": "string",
          "description": "Controlled vocabulary for the names used in the 'platform' attribute."
        },
        "processing_level": {
          "type": "string",
          "description": "A textual description of the processing (or quality control) level of the data."
        },
        "creator_name": {
          "type": "string",
          "description": "The name of the person (or other creator type specified by the creator_type attribute) principally responsible for creating this data."
        },
        "creator_email": {
          "type": "string",
          "description": "The email address of the person (or other creator type specified by the creator_type attribute) principally responsible for creating this data."
        },
        "creator_url": {
          "type": "string",
          "description": "The URL of the person (or other creator type specified by the creator_type attribute) principally responsible for creating this data."
        },
        "institution": {
          "type": "string",
          "description": "The name of the institution principally responsible for originating this data. This attribute is recommended by the CF convention."
        },
        "project": {
          "type": "string",
          "description": "The name of the project(s) principally responsible for originating this data. Multiple projects can be separated by commas, as described under Attribute Content Guidelines. Examples: 'PATMOS-X', 'Extended Continental Shelf Project'."
        },
        "creator_type": {
          "type": "string",
          "description": "Specifies type of creator with one of the following: 'person', 'group', 'institution', or 'position'. If this attribute is not specified, the creator is assumed to be a person.",
          "enum": [
            "person",
            "group",
            "institution",
            "position"
          ]
        },
        "content": {
          "type": "object",
          "description": "Used to embed small products inline within the message.",
          "properties": {
            "encoding": {
              "type": "string",
              "description": "Encoding of content",
              "enum": [
                "utf-8",
                "base64",
                "gzip"
              ]
            },
            "size": {
              "type": "integer",
              "maximum": 4096,
              "description": "Number of bytes contained in the file. Together with the ``integrity`` property, it provides additional assurance that file content was accurately received.\nNote that the limit takes into account the data encoding used, including data compression (for example `gzip`).\n"
            },
            "value": {
              "type": "string",
              "description": "The inline content of the file.",
              "maxLength": 4096
            },
            "standard_name": {
              "type": "string",
              "description": "CF standard for the data included in this message."
            },
            "unit": {
              "type": "string",
              "description": "Unit for the data"
            }
          },
          "required": [
            "encoding",
            "size",
            "value",
            "unit",
            "standard_name"
          ]
        }
      },
      "required": [
        "pubtime",
        "data_id",
        "metadata_id",
        "naming_authority",
        "summary",
        "Conventions",
        "keywords",
        "keywords_vocabulary",
        "license"
      ],
      "oneOf": [
        {
          "allOf": [
            {
              "required": [
                "start_datetime",
                "end_datetime"
              ]
            }
          ]
        },
        {
          "allOf": [
            {
              "required": [
                "datetime"
              ]
            }
          ]
        }
      ]
    },
    "links": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": [
          "href",
          "rel"
        ],
        "properties": {
          "href": {
            "type": "string",
            "example": "http://data.example.com/buildings/123"
          },
          "rel": {
            "type": "string",
            "example": "alternate"
          },
          "type": {
            "type": "string",
            "example": "application/geo+json"
          },
          "hreflang": {
            "type": "string",
            "example": "en"
          },
          "title": {
            "type": "string",
            "example": "Trierer Strasse 70, 53115 Bonn"
          },
          "length": {
            "type": "integer"
          }
        }
      }
    }
  },
  "required": [
    "id",
    "version",
    "type",
    "geometry",
    "properties",
    "links"
  ]
}